<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>mult()</name>

<category>PVector</category>

<subcategory>Method</subcategory>

<type></type>

<example>
<image />
<code><![CDATA[
v = PVector(5, 10, 0)
ellipse(v.x, v.y, 12, 12)
v.mult(6)
ellipse(v.x, v.y, 24, 24)
]]></code>
</example>

<example>
<image />
<code><![CDATA[
v1 = PVector(5, 10, 0)
ellipse(v1.x, v1.y, 12, 12)
v2 = PVector.mult(v1, 6)
ellipse(v2.x, v2.y, 24, 24)
]]></code>
</example>

<description><![CDATA[
Multiplies a vector by a scalar.  The version of the method that uses a float acts directly on the vector upon which it is called (as in the first example above), and therefore has no return value.  The versions that receive both a PVector and a float as arugments are static methods, and each returns a new PVector that is the result of the multiplication operation.  Both examples above produce the same visual output.
]]></description>

<syntax>
.mult(<c>n</c>)
.mult(<c>v</c>, <c>n</c>)
.mult(<c>v</c>, <c>n</c>, <c>target</c>)
</syntax>

<parameter>
<label>n</label>
<description><![CDATA[float: the number to multiply with the vector]]></description>
</parameter>

<parameter>
<label>v</label>
<description><![CDATA[PVector: the vector to multiply by the scalar]]></description>
</parameter>

<parameter>
<label>target</label>
<description><![CDATA[PVector: PVector in which to store the result]]></description>
</parameter>


</root>
