<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>resize()</name>

<category>PImage</category>

<subcategory>Method</subcategory>

<type></type>

<example>
<image />
<code><![CDATA[
rockies = loadImage("rockies.jpg")
image(rockies, 0, 0)
rockies.resize(100, 50)
image(rockies, 0, 0)
]]></code>
</example>

<example>
<image />
<code><![CDATA[
rockies = loadImage("rockies.jpg")
image(rockies, 0, 0)
rockies.resize(0, 50)
image(rockies, 0, 0)
]]></code>
</example>

<description><![CDATA[
Resize the image to a new width and height. To make the image scale proportionally, use 0 as the value for the <b>wide</b> or <b>high</b> parameter. For instance, to make the width of an image 150 pixels, and change the height using the same proportion, use resize(150, 0).<br />
<br />
Even though a PGraphics is technically a PImage, it is not possible to rescale the image data found in a PGraphics. (It's simply not possible to do this consistently across renderers: technically infeasible with P3D, or what would it even do with PDF?) If you want to resize PGraphics content, first get a copy of its image data using the <b>get()</b> method, and call <b>resize()</b> on the PImage that is returned.
]]></description>

<syntax> 
<c>pimg</c>.resize(<c>w</c>,<c>h</c>)
</syntax>

<parameter>
<label>pimg</label>
<description><![CDATA[PImage: any object of type PImage]]></description>
</parameter>

<parameter>
<label>w</label>
<description><![CDATA[int: the resized image width]]></description>
</parameter>

<parameter>
<label>h</label>
<description><![CDATA[int: the resized image height]]></description>
</parameter>

<related>PVector_get</related>

</root>
