<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>sub()</name>

<category>PVector</category>

<subcategory>Method</subcategory>

<type></type>

<example>
<image />
<code><![CDATA[
v1 = PVector(40, 20, 0)
v2 = PVector(65, 70, 0)

ellipse(v1.x, v1.y, 12, 12)
ellipse(v2.x, v2.y, 12, 12)
v2.sub(v1)
ellipse(v2.x, v2.y, 24, 24)
]]></code>
</example>

<example>
<image />
<code><![CDATA[
v = PVector(65, 70, 0)

ellipse(v.x, v.y, 12, 12)
ellipse(40, 20, 12, 12)
v.sub(40, 20, 0)
ellipse(v.x, v.y, 24, 24)
]]></code>
</example>

<example>
<image />
<code><![CDATA[
v1 = PVector(65, 70, 0)
v2 = PVector(40, 20, 0)

ellipse(v1.x, v1.y, 12, 12)
ellipse(v2.x, v2.y, 12, 12)
v3 = PVector.sub(v1, v2)
ellipse(v3.x, v3.y, 24, 24)
]]></code>
</example>

<description><![CDATA[
Subtracts x, y, and z components from a vector, subtracts one vector from another, or subtracts two independent vectors. The version of the method that substracts two vectors is a static method and returns a PVector, the others have no return value -- they act directly on the vector. See the examples for more context.  In all cases, the second vector (v2) is subtracted from the first (v1), resulting in v1-v2.
]]></description>

<syntax>
.sub(<c>v</c>)
.sub(<c>x</c>, <c>y</c>, <c>z</c>)
.sub(<c>v1</c>, <c>v2</c>)
.sub(<c>v1</c>, <c>v2</c>, <c>target</c>)
</syntax>

<parameter>
<label>v</label>
<description><![CDATA[PVector: any variable of type PVector]]></description>
</parameter>

<parameter>
<label>x</label>
<description><![CDATA[float: the x component of the vector]]></description>
</parameter>

<parameter>
<label>y</label>
<description><![CDATA[float: the y component of the vector]]></description>
</parameter>

<parameter>
<label>z</label>
<description><![CDATA[float: the z component of the vector]]></description>
</parameter>

<parameter>
<label>v1</label>
<description><![CDATA[PVector: the x, y, and z components of a PVector object]]></description>
</parameter>

<parameter>
<label>v2</label>
<description><![CDATA[PVector: the x, y, and z components of a PVector object]]></description>
</parameter>

<parameter>
<label>v1</label>
<description><![CDATA[PVector: the x, y, and z components of a PVector object]]></description>
</parameter>

<parameter>
<label>v2</label>
<description><![CDATA[PVector: the x, y, and z components of a PVector object]]></description>
</parameter>

<parameter>
<label>target</label>
<description><![CDATA[PVector: PVector in which to store the result]]></description>
</parameter>


</root>
