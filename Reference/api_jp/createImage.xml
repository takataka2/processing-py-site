<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>createImage()</name>

<category>Image</category>

<subcategory></subcategory>

<type></type>

<example>
<image />
<code><![CDATA[
img = createImage(66, 66, RGB)
img.loadPixels()
for i in range(len(img.pixels)): 
    img.pixels[i] = color(0, 90, 102)
img.updatePixels()
image(img, 17, 17)
]]></code>
</example>

<example>
<image />
<code><![CDATA[
img = createImage(66, 66, ARGB)
img.loadPixels()
for i in range(len(img.pixels)): 
    img.pixels[i] = color(0, 90, 102, i % img.width * 2)
img.updatePixels()
image(img, 17, 17)
image(img, 34, 34)
]]></code>
</example>

<description><![CDATA[
Creates a new PImage (the datatype for storing images). This provides a fresh buffer of pixels to play with. Set the size of the buffer with the <b>width</b> and <b>height</b> parameters. The <b>format</b> parameter defines how the pixels are stored. See the PImage reference for more information.
<br/> <br/>
Be sure to include all three parameters, specifying only the width and height (but no format) will produce a strange error.
<br/> <br/>
Advanced users please note that createImage() should be used instead of the syntax <tt>new PImage()</tt>. 
]]></description>

<syntax>
createImage(<c>w</c>, <c>h</c>, <c>format</c>)
</syntax>

<parameter>
<label>w</label>
<description><![CDATA[int: width in pixels]]></description>
</parameter>

<parameter>
<label>h</label>
<description><![CDATA[int: height in pixels]]></description>
</parameter>

<parameter>
<label>format</label>
<description><![CDATA[int: Either RGB, ARGB, ALPHA (grayscale alpha channel)]]></description>
</parameter>

<related>PImage</related>
<related>PGraphics</related>

</root>
