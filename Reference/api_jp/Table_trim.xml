<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>trim()</name>

<category>Table</category>

<subcategory>Method</subcategory>

<type>method</type>

<example>
<code><![CDATA[
def setup():
    table = Table()
    table.addColumn("name")
    table.addColumn("type")
    newRow = table.addRow()
    newRow.setString("name", "     Lion")
    newRow.setString("type", "Mammal")
    newRow = table.addRow()
    newRow.setString("name", "Snake    ")
    newRow.setString("type", "Reptile")
    newRow = table.addRow()
    newRow.setString("name", "    Mosquito    ")
    newRow.setString("type", "Insect")
    print('\n'.join(table.getStringColumn("name")))
    table.trim()
    print('\n'.join(table.getStringColumn("name")))

# Sketch prints:
# [0] "     Lion"
# [1] "Snake    "
# [2] "    Mosquito    "
# [0] "Lion"
# [1] "Snake"
# [2] "Mosquito"
]]></code>
</example>

<description><![CDATA[
Trims leading and trailing whitespace, such as spaces and tabs, from string table values. If no column is specified, then the values in all columns and rows are trimmed. A specific column may be referenced by either its ID or title.
]]></description>

<syntax>
.trim()
.trim(<c>column</c>)
.trim(<c>columnName</c>)
</syntax>

<parameter>
<label>column</label>
<description><![CDATA[int: ID number of the column to trim]]></description>
</parameter>

<parameter>
<label>columnName</label>
<description><![CDATA[String: title of the column to trim]]></description>
</parameter>

<related>Table_removeTokens</related>

</root>
