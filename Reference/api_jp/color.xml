<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>color()</name>

<category>Color</category>

<subcategory>Creating &amp; Reading</subcategory>

<type></type>

<example>
<image />
<code><![CDATA[
c = color(255, 204, 0) # Define color 'c'
fill(c) # Use color variable 'c' as fill color
noStroke() # Don't draw a stroke around shapes
rect(30, 20, 55, 55) # Draw rectangle
]]></code>
</example>

<example>
<image />
<code><![CDATA[
c = color(255, 204, 0) # Define color 'c'
fill(c) # Use color variable 'c' as fill color
noStroke() # Don't draw a stroke around shapes
ellipse(25, 25, 80, 80) # Draw left circle
# Using only one value with color()
# generates a grayscale value.
c = color(65) # Update 'c' with grayscale value
fill(c) # Use updated 'c' as fill color
ellipse(75, 75, 80, 80) # Draw right circle
]]></code>
</example>

<example>
<image />
<code><![CDATA[
noStroke() # Don't draw a stroke around shapes
# If no colorMode is specified, then the
# default of RGB with scale of 0-255 is used.
c = color(50, 55, 100) # Create a color for 'c'
fill(c) # Use color variable 'c' as fill color
rect(0, 10, 45, 80) # Draw left rect
colorMode(HSB, 100) # Use HSB with scale of 0-100
c = color(50, 55, 100) # Update 'c' with color
fill(c) # Use updated 'c' as fill color
rect(55, 10, 45, 80) # Draw right rect
]]></code>
</example>

<description><![CDATA[
Creates colors for storing in variables of the <b>color</b> datatype. The parameters are interpreted as RGB or HSB values depending on the current <b>colorMode()</b>. The default mode is RGB values from 0 to 255 and, therefore, <b>color(255, 204, 0)</b> will return a bright yellow color (see the first example above).<br/>
<br/>
Note that if only one value is provided to <b>color()</b>, it will be interpreted as a grayscale value. Add a second value, and it will be used for alpha transparency. When three values are specified, they are interpreted as either RGB or HSB values. Adding a fourth value applies alpha transparency.<br/>
<br/>
Note that when using hexadecimal notation, it is not necessary to use <b>color()</b>, as in: <b>c = #006699</b><br/>
<br/>
More about how colors are stored can be found in the reference for the <a href="color_datatype.html">color</a> datatype.
]]></description>

<syntax>
color(<c>gray</c>)
color(<c>gray</c>, <c>alpha</c>)
color(<c>v1</c>, <c>v2</c>, <c>v3</c>)
color(<c>v1</c>, <c>v2</c>, <c>v3</c>, <c>alpha</c>)
</syntax>

<parameter>
<label>gray</label>
<description><![CDATA[int: number specifying value between white and black]]></description>
</parameter>

<parameter>
<label>alpha</label>
<description><![CDATA[float, or int: relative to current color range]]></description>
</parameter>

<parameter>
<label>v1</label>
<description><![CDATA[float, or int: red or hue values relative to the current color range]]></description>
</parameter>

<parameter>
<label>v2</label>
<description><![CDATA[float, or int: green or saturation values relative to the current color range]]></description>
</parameter>

<parameter>
<label>v3</label>
<description><![CDATA[float, or int: blue or brightness values relative to the current color range]]></description>
</parameter>

<related>colorMode</related>

</root>
