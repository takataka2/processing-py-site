<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>[] (Index brackets)</name>

<category>Structure</category>

<subcategory></subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code><![CDATA[
# Create a list literal
elements = ["H", "He", "Li", "B", "C", "N", "O", "F", "Ne"]

# Retrieve a single item from the list with a given index
print(elements[3]) # Prints 'B'

# Negative indexes can be used, and count from the end of the list.
print(elements[-2]) # Prints 'F'

# Assign a new value to an existing element of a list:
elements[4] = 'Si'
print(elements) # Prints ['H', 'He', 'Li', 'B', 'Si', 'N', 'O', 'F', 'Ne']

]]></code>
</example>

<example>
<image></image>
<code><![CDATA[

# You can use index brackets with strings as well, to access individual
# characters by index:
message = "Now is the winter of our discontent"
print(message[0]) # Prints 'N'
print(message[-1]) # Prints 't'
print(message[11]) # Prints 'w'

]]></code>
</example>

<example>
<image></image>
<code><![CDATA[

# Index brackets are used to retrieve the value for a given key from a
# dictionary
element_names = {'H': 'hydrogen', 'He': 'helium', 'Li': 'lithium'}
print(element_names['He']) # Prints 'helium'

# Overwrite the value of an element, or add a new key/value pair, by assigning
# to the key:
element_names['Be'] = 'beryllium'
print(element_names['Be']) # Prints 'beryllium'

]]></code>
</example>

<description><![CDATA[

Index brackets (<b>[]</b>) have many uses in Python. First, they are used to
define "list literals," allowing you to declare a list and its contents in your
program. Index brackets are also used to write expressions that evaluate to a
single item within a list, or a single character in a string.<br/><br/>

For lists and other mutable sequences (but not strings), you can overwrite a
value at a particular index using the assignment operator (<b>=</b>).<br/><br/>

Negative numbers inside of index brackets cause Python to start counting
from the end of the sequence, instead of from the beginning. For example,
the expression <b>x[-1]</b> evaluates to the last item of list <b>x</b>,
<b>x[-2]</b> evaluates to the second-to-last item of list <b>x</b>, and
so forth.<br/><br/>

Finally, index brackets are used to retrieve or set the value for a given key
in a dictionary. For example, the expression <b>x[a]</b> evaluates to
whatever the value for key <b>a</b> is in dictionary <b>x</b>. The
statement <b>x[a] = b</b> will set the value for key <b>a</b> in dictionary
<b>x</b> to a new value <b>b</b> (overwriting any existing value).<br/><br/>

Specifying an index beyond the bounds of the sequence raises an
<b>IndexError</b> exception. Attempting to retrieve the value for a
key that does not exist in a dictionary raises a <b>KeyError</b> exception.
<br/><br/>

]]></description>

<syntax>
	[<c>elem0, ..., elemN</c>]
	<c>sequence</c>[<c>index</c>]
	<c>sequence</c>[<c>index</c>] = <c>expr</c>
	<c>dict</c>[<c>key</c>]
	<c>dict</c>[<c>key</c>] = <c>value</c>
</syntax>

<parameter>
<label>elem0, ..., elemN</label>
<description><![CDATA[list of elements, separated by commas, used to initialize a list]]></description>
</parameter>

<parameter>
<label>sequence</label>
<description><![CDATA[a list, string or other sequence]]></description>
</parameter>

<parameter>
<label>index</label>
<description><![CDATA[an integer index]]></description>
</parameter>

<parameter>
<label>expr</label>
<description><![CDATA[an expression, the result of which will be assigned to the given index in the sequence]]></description>
</parameter>

<parameter>
<label>dict</label>
<description><![CDATA[a dictionary]]></description>
</parameter>

<parameter>
<label>key</label>
<description><![CDATA[the key whose value you want to retrieve]]></description>
</parameter>

<parameter>
<label>value</label>
<description><![CDATA[a new value for the given key]]></description>
</parameter>

<returns></returns>

<related>slice</related>
<related>curlybraces</related>

<availability>1.0</availability>

<type>Operator</type>

<partof>PDE</partof>


</root>
