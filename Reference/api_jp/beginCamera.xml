<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>beginCamera()</name>

<category>Lights, Camera</category>

<subcategory>Camera</subcategory>

<type></type>

<example>
<image />
<code><![CDATA[
size(100, 100, P3D)
noFill()

beginCamera()
camera()
rotateX(-PI/6)
endCamera()

translate(50, 50, 0)
rotateY(PI/3)
box(45)

]]></code></example>

<description><![CDATA[
<b> beginCamera（）</b>および<b> endCamera（）</b>関数を使用すると、カメラ空間を高度にカスタマイズできます。カメラの動きを細かく制御したい場合に便利ですが、ほとんどのユーザーにとっては<b> camera（）</b>関数で十分です。<br /> <br />カメラ関連の関数は<b> draw（）</b>の中で実行される前にほかの変換（<b> rotate（）</b>や<b> translate（）</b>など）を置き換えます。しかし、自動的にそれらの変換を置き換えるわけではありません。このため変換を適用する前にカメラをリセットしたい場合は、カメラ関連の関数を（後で変換が行われるように）<b> draw（）</b>の先頭に配置し、<b> beginCamera（）</b> の後に<b> camera（）</b>関数を使用できます。<br /> <br />
この関数はマトリックスモードをカメラマトリックスに設定するので、<b> translate（）</b>、<b> rotate（）</b>、applyMatrix（）、resetMatrix（）などの呼び出しはカメラに影響します。
<b> beginCamera（）</b>は、後に出てくる<b> endCamera（）</b>と<b> beginCamera（）</b>は組み合わせて使う必要があります。<b> beginCamera（）</b>と<b> endCamera（）</b>のペアはネストできません。
]]></description>

<syntax>
beginCamera()
</syntax>

<related>camera</related>
<related>endCamera</related>
<related>applyMatrix</related>
<related>resetMatrix</related>
<related>translate</related>
<related>scale</related>

</root>
