<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>findRows()</name>

<category>Table</category>

<subcategory>Method</subcategory>

<type>method</type>

<example>
<code><![CDATA[
def setup():
    table = Table()
    table.addColumn("name")
    table.addColumn("type")
    newRow = table.addRow()
    newRow.setString("name", "Lion")
    newRow.setString("type", "Mammal")
    newRow = table.addRow()
    newRow.setString("name", "Snake")
    newRow.setString("type", "Reptile")
    newRow = table.addRow()
    newRow.setString("name", "Mosquito")
    newRow.setString("type", "Insect")
    newRow = table.addRow()
    newRow.setString("name", "Lizard")
    newRow.setString("type", "Reptile")
    for row in table.findRows("Reptile", "type"):
        print(row.getString("name") + ": " + row.getString("type"))
# Sketch prints:
# Snake: Reptile
# Lizard: Reptile
]]></code>
</example>

<description><![CDATA[
Finds the rows in the <b>Table</b> that contain the value provided, and returns references to those rows.  Returns an iterator, so <b>for</b> must be used to iterate through all the rows, as shown in the example above. The column to search may be specified by either its ID or title.
]]></description>

<syntax>
.findRows(<c>value</c>, <c>column</c>)
.findRows(<c>value</c>, <c>columnName</c>)
</syntax>

<parameter>
<label>value</label>
<description><![CDATA[String: the value to match]]></description>
</parameter>

<parameter>
<label>column</label>
<description><![CDATA[int: ID number of the column to search]]></description>
</parameter>

<parameter>
<label>columnName</label>
<description><![CDATA[String: title of the column to search]]></description>
</parameter>

<related>Table_getRow</related>
<related>Table_rows</related>
<related>Table_findRow</related>
<related>Table_matchRow</related>
<related>Table_matchRows</related>

</root>
